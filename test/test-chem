#!/usr/bin/env Rscript
# vi: ft=R
library(RUnit, quietly = TRUE)
source('../chem.R', chdir = TRUE)
args <- commandArgs(trailingOnly = F)
script.path <- sub("--file=","",args[grep("--file",args)])
library(rJava)

#################
# TEST LOAD SDF #
#################

test.load.sdf <- function() {

	# Bad file
	checkTrue(is.null(load.sdf('toto.sdf')))

	# Read file
	file <- file.path(dirname(script.path), 'files', 'results_2_MSMS.txt-chemspider.sdf')
	mols <- load.sdf(file)
	checkTrue( ! is.null(mols))
	checkEquals(length(mols$struct), nrow(mols$info))

	# Check SMILES
#	print(colnames(mols$info))
#	if ('SMILES' %in% colnames(mols$info))
#		for (i in seq(mols$struct)) {
#			print(get.smiles(mols$struct[[i]]))
#			print(get.InChi(mols$struct[[i]]))
#				print(mols$info[i, 'SMILES'])
#			checkEquals(get.smiles(mols$struct[[i]]), mols$info[i, 'SMILES'])
#
#		}

	# Check InChIs
	print(colnames(mols$info))
	if ('InChI' %in% colnames(mols$info))
		for (i in seq(mols$struct)) {
			inchi <- .jcall('org/guha/rcdk/util/Misc', 'S', 'getInChi', mols$struct[[i]])
#			inchi <- J("org.openscience.cdk.inchi.InChIGeneratorFactory")$getInstance()$getInChIGenerator(mols$struct[[i]])$getInChI()
				print(inchi)
		}
}

########
# MAIN #
########

test.load.sdf()
